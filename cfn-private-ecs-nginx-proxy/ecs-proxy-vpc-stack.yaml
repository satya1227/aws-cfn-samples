# 
    # This template will:
    #   Create a VPC with:
    #       3 Public Subnets
    #       3 Private Subnets
    #       3 Isolated Subnets (no routes)
    #   An Internet Gateway (with routes to it for Public Subnets)
    #   A NAT Gateway for outbound access (with routes from Private Subnets set to use it)
    #     
    Parameters:
      PubPrivateVPCClassB:   
        Type: String
    Resources:
      PubPrivateVPC:
        Type: 'AWS::EC2::VPC'
        Properties:
          CidrBlock: !Sub '172.${PubPrivateVPCClassB}.0.0/16'   ## 172.50.0.0/16
          Tags: 
           - Key: "Name"
             Value: 'PubPrivateVPC'
           - Key: "CIDR"
             Value: !Sub '172.${PubPrivateVPCClassB}.0.0/16'   #"172.50.0.0/16"
      
      PublicSubnet1:
        Type: 'AWS::EC2::Subnet'
        Properties:
          VpcId: !Ref PubPrivateVPC
          AvailabilityZone: us-east-1a
          CidrBlock: !Sub '172.${PubPrivateVPCClassB}.1.0/24'
          MapPublicIpOnLaunch: true
          Tags: 
           - Key: "Name"
             Value: "PublicSubnet1"
           - Key: "CIDR"
             Value: !Sub "172.${PubPrivateVPCClassB}.1.0/24"
     
      PublicSubnet2:
        Type: 'AWS::EC2::Subnet'
        Properties:
          VpcId: !Ref PubPrivateVPC
          AvailabilityZone: us-east-1b
          CidrBlock: !Sub '172.${PubPrivateVPCClassB}.2.0/24'
          MapPublicIpOnLaunch: true
          Tags: 
          - Key: "Name"
            Value: "PublicSubnet2"
          - Key: "CIDR"
            Value: !Sub "172.${PubPrivateVPCClassB}.2.0/24"

      PublicSubnet3:
        Type: 'AWS::EC2::Subnet'
        Properties:
          VpcId: !Ref PubPrivateVPC
          AvailabilityZone: us-east-1c
          CidrBlock: !Sub '172.${PubPrivateVPCClassB}.3.0/24'
          MapPublicIpOnLaunch: true
          Tags: 
          - Key: "Name"
            Value: "PublicSubnet3"
          - Key: "CIDR"
            Value: "172.${PubPrivateVPCClassB}.3.0/24"

      PrivateSubnet1:
        Type: 'AWS::EC2::Subnet'
        Properties:
          VpcId: !Ref PubPrivateVPC
          AvailabilityZone: us-east-1a
          CidrBlock: !Sub '172.${PubPrivateVPCClassB}.5.0/24'
          MapPublicIpOnLaunch: false
          Tags: 
          - Key: "Name"
            Value: "PrivateSubnet1"
          - Key: "CIDR"
            Value: !Sub "172.${PubPrivateVPCClassB}.5.0/24"

      PrivateSubnet2:
        Type: 'AWS::EC2::Subnet'
        Properties:
          VpcId: !Ref PubPrivateVPC
          AvailabilityZone: us-east-1b
          CidrBlock: !Sub '172.${PubPrivateVPCClassB}.6.0/24'
          MapPublicIpOnLaunch: false
          Tags: 
          - Key: "Name"
            Value: "PrivateSubnet2"
          - Key: "CIDR"
            Value: !Sub "172.${PubPrivateVPCClassB}.6.0/24"    

      PrivateSubnet3:
        Type: 'AWS::EC2::Subnet'
        Properties:
          VpcId: !Ref PubPrivateVPC
          AvailabilityZone: us-east-1c
          CidrBlock: !Sub '172.${PubPrivateVPCClassB}.7.0/24'
          MapPublicIpOnLaunch: false
          Tags: 
          - Key: "Name"
            Value: "PrivateSubnet3"
          - Key: "CIDR"
            Value: !Sub "172.${PubPrivateVPCClassB}.7.0/24"    

      IsolatedSubnet1:
        Type: 'AWS::EC2::Subnet'
        Properties:
          VpcId: !Ref PubPrivateVPC
          AvailabilityZone: us-east-1a
          CidrBlock: !Sub '172.${PubPrivateVPCClassB}.11.0/24'
          MapPublicIpOnLaunch: false
          Tags: 
          - Key: "Name"
            Value: "IsolatedSubnet1"
          - Key: "CIDR"
            Value: !Sub "172.${PubPrivateVPCClassB}.11.0/24"    
            
      IsolatedSubnet2:
        Type: 'AWS::EC2::Subnet'
        Properties:
          VpcId: !Ref PubPrivateVPC
          AvailabilityZone: us-east-1b
          CidrBlock: !Sub '172.${PubPrivateVPCClassB}.12.0/24'
          MapPublicIpOnLaunch: false
          Tags: 
          - Key: "Name"
            Value: "IsolatedSubnet2"
          - Key: "CIDR"
            Value: !Sub "172.${PubPrivateVPCClassB}.12.0/24"    

      IsolatedSubnet3:
        Type: 'AWS::EC2::Subnet'
        Properties:
          VpcId: !Ref PubPrivateVPC
          AvailabilityZone: us-east-1c
          CidrBlock: !Sub '172.${PubPrivateVPCClassB}.13.0/24'
          MapPublicIpOnLaunch: false
          Tags: 
          - Key: "Name"
            Value: "IsolatedSubnet3"
          - Key: "CIDR"
            Value: !Sub "172.${PubPrivateVPCClassB}.13.0/24"    

      InternetGateway:
        Type: 'AWS::EC2::InternetGateway'
        Properties:
          Tags:
            - Key: Name
              Value: !Join [_, [!Ref 'AWS::StackName']]
            - Key: Network
              Value: Public
      
      GatewayToInternet:
        Type: 'AWS::EC2::VPCGatewayAttachment'
        Properties:
          VpcId: !Ref PubPrivateVPC
          InternetGatewayId: !Ref InternetGateway
      
      PublicRouteTable:
        Type: 'AWS::EC2::RouteTable'
        Properties:
          VpcId: !Ref PubPrivateVPC
          Tags:
            - Key: Network
              Value: Public
            - Key: Name
              Value: "PublicRouteTable"
      
      PublicRoute:
        Type: 'AWS::EC2::Route'
        DependsOn: GatewayToInternet
        Properties:
          RouteTableId: !Ref PublicRouteTable
          DestinationCidrBlock: 0.0.0.0/0
          GatewayId: !Ref InternetGateway
     
      PublicSubnet1RouteTableAssociation:
        Type: 'AWS::EC2::SubnetRouteTableAssociation'
        Properties:
          SubnetId: !Ref PublicSubnet1
          RouteTableId: !Ref PublicRouteTable
     
      PublicSubnet2RouteTableAssociation:
        Type: 'AWS::EC2::SubnetRouteTableAssociation'
        Properties:
          SubnetId: !Ref PublicSubnet2
          RouteTableId: !Ref PublicRouteTable
     
      PublicSubnet3RouteTableAssociation:
        Type: 'AWS::EC2::SubnetRouteTableAssociation'
        Properties:
          SubnetId: !Ref PublicSubnet3
          RouteTableId: !Ref PublicRouteTable

      NatGateway:
        Type: "AWS::EC2::NatGateway"
        DependsOn: NatPublicIP
        Properties: 
          AllocationId: !GetAtt NatPublicIP.AllocationId
          SubnetId: !Ref PublicSubnet1
     
      NatPublicIP:
        Type: "AWS::EC2::EIP"
        DependsOn: PubPrivateVPC
        Properties:
          Domain: vpc
     
      PrivateRouteTable:
        Type: 'AWS::EC2::RouteTable'
        Properties:
          VpcId: !Ref PubPrivateVPC
          Tags:
            - Key: Network
              Value: Private
            - Key: Name
              Value: "PrivateRouteTable"
      
      PrivateRoute:
        Type: 'AWS::EC2::Route'
        Properties:
          RouteTableId: !Ref PrivateRouteTable
          DestinationCidrBlock: 0.0.0.0/0
          NatGatewayId: !Ref NatGateway
     
      PrivateSubnet1RouteTableAssociation:
        Type: 'AWS::EC2::SubnetRouteTableAssociation'
        Properties:
          SubnetId: !Ref PrivateSubnet1
          RouteTableId: !Ref PrivateRouteTable
     
      PrivateSubnet2RouteTableAssociation:
        Type: 'AWS::EC2::SubnetRouteTableAssociation'
        Properties:
          SubnetId: !Ref PrivateSubnet2
          RouteTableId: !Ref PrivateRouteTable
      
      PrivateSubnet3RouteTableAssociation:
        Type: 'AWS::EC2::SubnetRouteTableAssociation'
        Properties:
          SubnetId: !Ref PrivateSubnet3
          RouteTableId: !Ref PrivateRouteTable
     
      IsolatedRouteTable:
        Type: 'AWS::EC2::RouteTable'
        Properties:
          VpcId: !Ref PubPrivateVPC
          Tags:
            - Key: Network
              Value: Private
            - Key: Name
              Value: "IsolatedRouteTable"

      IsolatedSubnet1RouteTableAssociation:
        Type: 'AWS::EC2::SubnetRouteTableAssociation'
        Properties:
          SubnetId: !Ref IsolatedSubnet1
          RouteTableId: !Ref IsolatedRouteTable
     
      IsolatedSubnet2RouteTableAssociation:
        Type: 'AWS::EC2::SubnetRouteTableAssociation'
        Properties:
          SubnetId: !Ref IsolatedSubnet2
          RouteTableId: !Ref IsolatedRouteTable
      
      IsolatedSubnet3RouteTableAssociation:
        Type: 'AWS::EC2::SubnetRouteTableAssociation'
        Properties:
          SubnetId: !Ref IsolatedSubnet3
          RouteTableId: !Ref IsolatedRouteTable   

    Outputs: 
      PubPrivateVPC:
        Value: !Ref PubPrivateVPC
        Description: 'Public Private VPC'
      PrivateSubnet1:
        Description: "Private Subnet 1"
        Value: !Ref PrivateSubnet1
      PrivateSubnet2:
        Description: "Private Subnet 2"
        Value: !Ref PrivateSubnet2
      PrivateSubnet3:
        Description: "Private Subnet 3"
        Value: !Ref PrivateSubnet3
      PublicSubnet1:
        Description: "Public Subnet 1"
        Value: !Ref PublicSubnet1
      PublicSubnet2:
        Description: "Public Subnet 2"
        Value: !Ref PublicSubnet2
      PublicSubnet3:
        Description: "Public Subnet 3"
        Value: !Ref PublicSubnet3
      IsolatedSubnet1:
        Description: "Isolated Subnet 1"
        Value: !Ref IsolatedSubnet1
      IsolatedSubnet2:
        Description: "Isolated Subnet 2"
        Value: !Ref IsolatedSubnet2
      IsolatedSubnet3:
        Description: "Isolated Subnet 3"
        Value: !Ref IsolatedSubnet3
